meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
View(OA_data)
View(meta_RR)
ggplot(meta_RR,aes(y=vi,x =year_online,size=1/sqrt(vi))) + geom_point() + geom_smooth(method=lm,col="red",show.legend=FALSE)+labs(x="Publication Year", y="Fisher's Z-transformed Correlation coefficient(zr)",size="Pricision(1/SE)"+theme_classic())
ggplot(meta_RR,aes(y=yi,x =year_online,size=1/sqrt(vi))) + geom_point() + geom_smooth(method=lm,col="red",show.legend=FALSE)+labs(x="Publication Year", y="Fisher's Z-transformed Correlation coefficient(zr)",size="Pricision(1/SE)"+theme_classic())
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=OA_data))
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=meta_RR))
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=meta_RR))
meta_RR <- meta_RR %>% mutate(abs_yi = abs(yi))
MLMA2 <- metafor::rma.mv(abs_yi ~ 1, V = vi, method = "REML",
random = list(~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
# NULL means not to apply different colors to the two measurements of the data
meta_RR %>% filter(VRR < quantile(meta_RR$VRR,0.95)) %>% anti_funnel(NULL)
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
# NULL means not to apply different colors to the two measurements of the data
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(NULL)
meta_RR <- meta_RR %>% group_by(study) %>% mutate(exp_id = 1:n()) %>% ungroup()
meta_RR %>% filter(vi< quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(NULL)
metafor::funnel(x = meta_RR$yi, vi = meta_RR$vi, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("#e9fbff", "#dcf0ef", "#bac8cc"),ylim = c(0.01,30),xlim = c(-3,3),
las = 1, xlab = "Response ratio (RR)", atransf = exp, legend = TRUE, pch =20)
funnel(MLMA1, yilm=c(1:4,by=2),yaxis="seinv",level=c(90.95,99),ylab="Precision(1/SE)",refline=0,cex=0.4)
MLMA1 <- metafor::rma.mv(yi ~ 1, V = vi, method = "REML",
random = list( ~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
summary(MLMA1)
meta_RR <- meta_RR %>% mutate(abs_yi = abs(yi))
MLMA2 <- metafor::rma.mv(abs_yi ~ 1, V = vi, method = "REML",
random = list(~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
MLMA2
funnel(MLMA1, yilm=c(1:4,by=2),yaxis="seinv",level=c(90.95,99),ylab="Precision(1/SE)",refline=0,cex=0.4)
funnel(MLMA2, yilm=c(1:4,by=2),yaxis="seinv",level=c(90.95,99),ylab="Precision(1/SE)",refline=0,cex=0.4)
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "abs(lnRR)", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
ggplot(meta_RR,aes(y=yi,x =year_online,size=1/sqrt(vi))) + geom_point() + geom_smooth(method=lm,col="red",show.legend=FALSE)+labs(x="Publication Year", y="Fisher's Z-transformed Correlation coefficient(zr)",size="Pricision(1/SE)"+theme_classic())
MLMR <- rma.mv(yi ~ inverse_vi, V = vi, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% mutate(inverse_vi = 1/vi) %>% filter(inverse_vi <= quantile(inverse_vi, 0.95)))
MLMR
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=meta_RR))
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=meta_RR))
r2a <- orchaRd::r2_ml(MLMI)
IS_rom_data <- rom_data%>% filter(Year..print.>2011)
IS_meta_RR <- meta_RR%>% filter(year_online>2011)
ggplot(IS_meta_RR,aes(y=yi,x=year_online,size=sqrt(1/vi)))+geom_point+geom_smooth(method = lm,col="red",show.legend = FALSE)+labs(x="publication Year",y="Log Response Ratio(lnRR)",size="Precision(1/SE")+theme_classic()
IS_meta_RR <- meta_RR%>% filter(year_online>2011)
ggplot(IS_meta_RR,aes(y=yi,x=year_online,size=sqrt(1/vi)))+geom_point()+geom_smooth(method = lm,col="red",show.legend = FALSE)+labs(x="publication Year",y="Log Response Ratio(lnRR)",size="Precision(1/SE")+theme_classic()
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=meta_RR))
r2a <- orchaRd::r2_ml(MLMI)
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=meta_RR))
r2a <- orchaRd::r2_ml(MLMI)
anti_funnel <- function(data, diff_color){
ggplot(meta_RR, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "abs(lnRR)", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
ggplot(meta_RR,aes(y=yi,x =year_online,size=1/sqrt(vi))) + geom_point() + geom_smooth(method=lm,col="red",show.legend=FALSE)+labs(x="Publication Year", y="Fisher's Z-transformed Correlation coefficient(zr)",size="Pricision(1/SE)"+theme_classic())
anti_funnel <- function(data, diff_color){
ggplot(meta_RR, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "abs(lnRR)", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(NULL)
anti_funnel <- function(data, diff_color){
ggplot(meta_RR, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "abs(lnRR)", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(NULL)
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
MLMI <- metafor::rma.mv(yi~(1/vi),vi=vi,random=list(~1|Study,~1|residual, data=meta_RR))
MLMI <- metafor::rma.mv(lnRR~(1/vi),V=vi,random=list(~1|Study,~1|residual, data=meta_RR))
r2a <- orchaRd::r2_ml(MLMI)
MLMI <- metafor::rma.mv(yi ~ inverse_vi, V = vi,,random=list(~1|Study,~1|residual, data=meta_RR))
MLMI <- metafor::rma.mv(yi ~ inverse_vi, V = vi,,random=list(~1|Study,~1|residual, data=meta_RR))
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(data=meta_RR,aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
MLMI <- metafor::rma.mv(yi ~ inverse_vi, V = vi,,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR))
MLMI <- metafor::rma.mv(yi ~ inverse_vi, V = vi,,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
MLMI <- metafor::rma.mv(yi ~ inverse_vi+vi, V = vi,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
MLMR <- rma.mv(yi ~ inverse_vi, V = vi, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% mutate(inverse_vi = 1/vi) %>% filter(inverse_vi <= quantile(inverse_vi, 0.95)))
MLMR
MLMI <- rma.mv(yi ~ inverse_vi+vi, V = vi,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(pacman)
library(metafor)
library(ggpmisc)
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick)
OA_data <-  read_csv("OA_activitydat_20190302_BIOL3207.csv") %>%
select(-1)
OA_data <- OA_data %>% mutate(loc = as.factor(loc),species = as.factor(species),
size = as.factor(size),treatment = as.factor(treatment))
summary(OA_data)
OA_data %>% summarise(across(everything(), ~sum(is.na(.))))
table(OA_data[!complete.cases(OA_data$activity),] %>% select(species,loc))
OA_data <- OA_data[complete.cases(OA_data$activity),]
OA_data
file_name_1 <-  "ocean_meta_data.csv"
existing_res <- read_csv(file_name_1,show_col_types = FALSE)
summary(existing_res)
levels(OA_data$treatment)[levels(OA_data$treatment)=="control"] <- "ctrl"
levels(OA_data$treatment)[levels(OA_data$treatment)=="CO2"] <- "oa"
OA_station <- OA_data %>% group_by(treatment,species) %>% summarise(mean = mean(activity),sd = sd(activity),n = n(),.groups = "drop") %>%
pivot_wider(names_from = treatment,names_glue = "{treatment}.{.value}",values_from = c(mean,n,sd))
OA_station
OA_information <- read_csv("clark_paper_data.csv",show_col_types = FALSE)
extra_infor<- cbind(tibble(OA_information),OA_station)
extra_infor <- extra_infor %>%rename(Species = species) %>% select(colnames(existing_res))
rm(list = ls())
meta_data <- read_csv("ocean_meta_data.csv",show_col_types = FALSE) %>% janitor::clean_names()
ini_size = nrow(meta_data)
unique(meta_data$pub_year_if[is.na(as.numeric(meta_data$pub_year_if))])
unique(meta_data$x2017_if[is.na(as.numeric(meta_data$x2017_if))])
meta_data[meta_data == "-"] <- NA
meta_data$cue_stimulus_type[is.na(meta_data$cue_stimulus_type)] <- "None"
meta_data <- meta_data %>% mutate(pub_year_if = as.numeric(pub_year_if), x2017_if = as.numeric(x2017_if),
effect_type = as.factor(effect_type), climate_fish_base = as.factor(climate_fish_base),
env_cue_stimulus = as.factor(env_cue_stimulus), cue_stimulus_type = as.factor(cue_stimulus_type),
species = as.factor(species))
summary(meta_data)
meta_RR <- metafor::escalc(measure = "ROM", m1i = oa_mean, m2i = ctrl_mean,
sd1i = oa_sd, sd2i = ctrl_sd,n1i = oa_n, n2i = ctrl_n,data =meta_data)
meta_RR
meta_RR[!complete.cases(meta_RR$yi),] %>% select(study,behavioural_metric, ctrl_mean,oa_mean,yi)
doubtful_study <- unique(meta_RR[!complete.cases(meta_RR$yi),]$study)
meta_RR <- meta_RR %>%  filter(!is.na(yi)) %>%
mutate(measure_change = (study %in% doubtful_study)|grepl("change|Change",behavioural_metric) )
meta_RR %>% select(vi,yi) %>% pivot_longer(cols = vi:yi, names_to = "type", values_to = "value") %>%
ggplot(aes(x = 1,y = value)) + geom_violin() + facet_wrap(~type, scale = "free") + ggtitle("Distribution of lnRR and VlnRR") + xlab(NULL)
write_csv(meta_RR,"meta_RR.csv")
meta_RR %>% mutate(sd_yi = sqrt(vi)) %>% select(yi, sd_yi, measure_change) %>% pivot_longer(cols = c(yi,sd_yi), names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_density(aes(color = measure_change)) + facet_wrap(~type, scale = "free") + ggtitle("Density of lnRR and VRR between two measurement methods")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR <- meta_RR %>% group_by(study) %>% mutate(exp_id = 1:n()) %>% ungroup()
MLMA1 <- metafor::rma.mv(yi ~ 1, V = vi, method = "REML",
random = list( ~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
meta_RR <- meta_RR %>% group_by(study) %>% mutate(exp_id = 1:n()) %>% ungroup()
meta_RR %>% filter(vi< quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi< quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs(yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
View(meta_RR)
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
write_csv(meta_RR,"meta_RR.csv")
meta_RR %>% mutate(sd_yi = sqrt(vi)) %>% select(yi, sd_yi, measure_change) %>% pivot_longer(cols = c(yi,sd_yi), names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_density(aes(color = measure_change)) + facet_wrap(~type, scale = "free") + ggtitle("Density of lnRR and VRR between two measurement methods")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi< quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
meta_RR <- meta_RR %>% group_by(study) %>% mutate(exp_id = 1:n()) %>% ungroup()
MLMA1 <- metafor::rma.mv(yi ~ 1, V = vi, method = "REML",
random = list( ~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(pacman)
library(metafor)
library(ggpmisc)
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick)
OA_data <-  read_csv("OA_activitydat_20190302_BIOL3207.csv") %>%
select(-1)
OA_data <- OA_data %>% mutate(loc = as.factor(loc),species = as.factor(species),
size = as.factor(size),treatment = as.factor(treatment))
summary(OA_data)
OA_data %>% summarise(across(everything(), ~sum(is.na(.))))
table(OA_data[!complete.cases(OA_data$activity),] %>% select(species,loc))
OA_data <- OA_data[complete.cases(OA_data$activity),]
OA_data
file_name_1 <-  "ocean_meta_data.csv"
existing_res <- read_csv(file_name_1,show_col_types = FALSE)
summary(existing_res)
levels(OA_data$treatment)[levels(OA_data$treatment)=="control"] <- "ctrl"
levels(OA_data$treatment)[levels(OA_data$treatment)=="CO2"] <- "oa"
OA_station <- OA_data %>% group_by(treatment,species) %>% summarise(mean = mean(activity),sd = sd(activity),n = n(),.groups = "drop") %>%
pivot_wider(names_from = treatment,names_glue = "{treatment}.{.value}",values_from = c(mean,n,sd))
OA_station
OA_information <- read_csv("clark_paper_data.csv",show_col_types = FALSE)
extra_infor<- cbind(tibble(OA_information),OA_station)
extra_infor <- extra_infor %>%rename(Species = species) %>% select(colnames(existing_res))
rm(list = ls())
meta_data <- read_csv("ocean_meta_data.csv",show_col_types = FALSE) %>% janitor::clean_names()
ini_size = nrow(meta_data)
unique(meta_data$pub_year_if[is.na(as.numeric(meta_data$pub_year_if))])
unique(meta_data$x2017_if[is.na(as.numeric(meta_data$x2017_if))])
meta_data[meta_data == "-"] <- NA
meta_data$cue_stimulus_type[is.na(meta_data$cue_stimulus_type)] <- "None"
meta_data <- meta_data %>% mutate(pub_year_if = as.numeric(pub_year_if), x2017_if = as.numeric(x2017_if),
effect_type = as.factor(effect_type), climate_fish_base = as.factor(climate_fish_base),
env_cue_stimulus = as.factor(env_cue_stimulus), cue_stimulus_type = as.factor(cue_stimulus_type),
species = as.factor(species))
summary(meta_data)
meta_RR <- metafor::escalc(measure = "ROM", m1i = oa_mean, m2i = ctrl_mean,
sd1i = oa_sd, sd2i = ctrl_sd,n1i = oa_n, n2i = ctrl_n,data =meta_data)
meta_RR
meta_RR[!complete.cases(meta_RR$yi),] %>% select(study,behavioural_metric, ctrl_mean,oa_mean,yi)
doubtful_study <- unique(meta_RR[!complete.cases(meta_RR$yi),]$study)
meta_RR <- meta_RR %>%  filter(!is.na(yi)) %>%
mutate(measure_change = (study %in% doubtful_study)|grepl("change|Change",behavioural_metric) )
meta_RR %>% select(vi,yi) %>% pivot_longer(cols = vi:yi, names_to = "type", values_to = "value") %>%
ggplot(aes(x = 1,y = value)) + geom_violin() + facet_wrap(~type, scale = "free") + ggtitle("Distribution of lnRR and VlnRR") + xlab(NULL)
write_csv(meta_RR,"meta_RR.csv")
meta_RR %>% mutate(sd_yi = sqrt(vi)) %>% select(yi, sd_yi, measure_change) %>% pivot_longer(cols = c(yi,sd_yi), names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_density(aes(color = measure_change)) + facet_wrap(~type, scale = "free") + ggtitle("Density of lnRR and VRR between two measurement methods")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
anti_funnel <- function(data, diff_color){
ggplot(meta_RR, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "abs(lnRR)", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(NULL)
metafor::funnel(x = meta_RR$yi, vi = meta_RR$vi, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("#e9fbff", "#dcf0ef", "#bac8cc"),ylim = c(0.01,30),xlim = c(-3,3),
las = 1, xlab = "Response ratio (RR)", atransf = exp, legend = TRUE, pch =20)
View(meta_data)
OA_data <-  read_csv("OA_activitydat_20190302_BIOL3207.csv") %>%
select(-1)
OA_data <- OA_data %>% mutate(loc = as.factor(loc),species = as.factor(species),
size = as.factor(size),treatment = as.factor(treatment))
summary(OA_data)
OA_data %>% summarise(across(everything(), ~sum(is.na(.))))
table(OA_data[!complete.cases(OA_data$activity),] %>% select(species,loc))
OA_data <- OA_data[complete.cases(OA_data$activity),]
OA_data
file_name_1 <-  "ocean_meta_data.csv"
existing_res <- read_csv(file_name_1,show_col_types = FALSE)
summary(existing_res)
levels(OA_data$treatment)[levels(OA_data$treatment)=="control"] <- "ctrl"
levels(OA_data$treatment)[levels(OA_data$treatment)=="CO2"] <- "oa"
OA_station <- OA_data %>% group_by(treatment,species) %>% summarise(mean = mean(activity),sd = sd(activity),n = n(),.groups = "drop") %>%
pivot_wider(names_from = treatment,names_glue = "{treatment}.{.value}",values_from = c(mean,n,sd))
OA_station
OA_information <- read_csv("clark_paper_data.csv",show_col_types = FALSE)
extra_infor<- cbind(tibble(OA_information),OA_station)
extra_infor <- extra_infor %>%rename(Species = species) %>% select(colnames(existing_res))
rm(list = ls())
meta_data <- read_csv("ocean_meta_data.csv",show_col_types = FALSE) %>% janitor::clean_names()
ini_size = nrow(meta_data)
unique(meta_data$pub_year_if[is.na(as.numeric(meta_data$pub_year_if))])
unique(meta_data$x2017_if[is.na(as.numeric(meta_data$x2017_if))])
unique(meta_data$pub_year_if[is.na(as.numeric(meta_data$pub_year_if))])
unique(meta_data$x2017_if[is.na(as.numeric(meta_data$x2017_if))])
meta_data[meta_data == "-"] <- NA
meta_data$cue_stimulus_type[is.na(meta_data$cue_stimulus_type)] <- "None"
meta_data <- meta_data %>% mutate(pub_year_if = as.numeric(pub_year_if), x2017_if = as.numeric(x2017_if),
effect_type = as.factor(effect_type), climate_fish_base = as.factor(climate_fish_base),
env_cue_stimulus = as.factor(env_cue_stimulus), cue_stimulus_type = as.factor(cue_stimulus_type),
species = as.factor(species))
summary(meta_data)
meta_RR <- metafor::escalc(measure = "ROM", m1i = oa_mean, m2i = ctrl_mean,
sd1i = oa_sd, sd2i = ctrl_sd,n1i = oa_n, n2i = ctrl_n,data =meta_data)
meta_RR
View(meta_RR)
meta_RR[!complete.cases(meta_RR$yi),] %>% select(study,behavioural_metric, ctrl_mean,oa_mean,yi)
doubtful_study <- unique(meta_RR[!complete.cases(meta_RR$yi),]$study)
meta_RR <- meta_RR %>%  filter(!is.na(yi)) %>%
mutate(measure_change = (study %in% doubtful_study)|grepl("change|Change",behavioural_metric) )
meta_RR %>% select(vi,yi) %>% pivot_longer(cols = vi:yi, names_to = "type", values_to = "value") %>%
ggplot(aes(x = 1,y = value)) + geom_violin() + facet_wrap(~type, scale = "free") + ggtitle("Distribution of lnRR and VlnRR") + xlab(NULL)
write_csv(meta_RR,"meta_RR.csv")
meta_RR %>% mutate(sd_yi = sqrt(vi)) %>% select(yi, sd_yi, measure_change) %>% pivot_longer(cols = c(yi,sd_yi), names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_density(aes(color = measure_change)) + facet_wrap(~type, scale = "free") + ggtitle("Density of lnRR and VRR between two measurement methods")
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
View(meta_RR)
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi< quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
meta_RR <- meta_RR %>% group_by(study) %>% mutate(exp_id = 1:n()) %>% ungroup()
View(meta_RR)
MLMA1 <- metafor::rma.mv(yi ~ 1, V = vi, method = "REML",
random = list( ~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
summary(MLMA1)
meta_RR <- meta_RR %>% mutate(abs_yi = abs(yi))
MLMA2 <- metafor::rma.mv(abs_yi ~ 1, V = vi, method = "REML",
random = list(~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
MLMA2
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(pacman)
library(metafor)
library(ggpmisc)
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick)
OA_data <-  read_csv("OA_activitydat_20190302_BIOL3207.csv") %>%
select(-1)
OA_data <- OA_data %>% mutate(loc = as.factor(loc),species = as.factor(species),
size = as.factor(size),treatment = as.factor(treatment))
summary(OA_data)
OA_data %>% summarise(across(everything(), ~sum(is.na(.))))
table(OA_data[!complete.cases(OA_data$activity),] %>% select(species,loc))
OA_data <- OA_data[complete.cases(OA_data$activity),]
OA_data
file_name_1 <-  "ocean_meta_data.csv"
existing_res <- read_csv(file_name_1,show_col_types = FALSE)
summary(existing_res)
levels(OA_data$treatment)[levels(OA_data$treatment)=="control"] <- "ctrl"
levels(OA_data$treatment)[levels(OA_data$treatment)=="CO2"] <- "oa"
OA_station <- OA_data %>% group_by(treatment,species) %>% summarise(mean = mean(activity),sd = sd(activity),n = n(),.groups = "drop") %>%
pivot_wider(names_from = treatment,names_glue = "{treatment}.{.value}",values_from = c(mean,n,sd))
OA_station
OA_information <- read_csv("clark_paper_data.csv",show_col_types = FALSE)
extra_infor<- cbind(tibble(OA_information),OA_station)
extra_infor <- extra_infor %>%rename(Species = species) %>% select(colnames(existing_res))
rm(list = ls())
meta_data <- read_csv("ocean_meta_data.csv",show_col_types = FALSE) %>% janitor::clean_names()
ini_size = nrow(meta_data)
unique(meta_data$pub_year_if[is.na(as.numeric(meta_data$pub_year_if))])
unique(meta_data$x2017_if[is.na(as.numeric(meta_data$x2017_if))])
meta_data[meta_data == "-"] <- NA
meta_data$cue_stimulus_type[is.na(meta_data$cue_stimulus_type)] <- "None"
meta_data <- meta_data %>% mutate(pub_year_if = as.numeric(pub_year_if), x2017_if = as.numeric(x2017_if),
effect_type = as.factor(effect_type), climate_fish_base = as.factor(climate_fish_base),
env_cue_stimulus = as.factor(env_cue_stimulus), cue_stimulus_type = as.factor(cue_stimulus_type),
species = as.factor(species))
summary(meta_data)
meta_RR <- metafor::escalc(measure = "ROM", m1i = oa_mean, m2i = ctrl_mean,
sd1i = oa_sd, sd2i = ctrl_sd,n1i = oa_n, n2i = ctrl_n,data =meta_data)
meta_RR
meta_RR[!complete.cases(meta_RR$yi),] %>% select(study,behavioural_metric, ctrl_mean,oa_mean,yi)
doubtful_study <- unique(meta_RR[!complete.cases(meta_RR$yi),]$study)
meta_RR <- meta_RR %>%  filter(!is.na(yi)) %>%
mutate(measure_change = (study %in% doubtful_study)|grepl("change|Change",behavioural_metric) )
meta_RR %>% select(vi,yi) %>% pivot_longer(cols = vi:yi, names_to = "type", values_to = "value") %>%
ggplot(aes(x = 1,y = value)) + geom_violin() + facet_wrap(~type, scale = "free") + ggtitle("Distribution of lnRR and VlnRR") + xlab(NULL)
write_csv(meta_RR,"meta_RR.csv")
meta_RR %>% mutate(sd_yi = sqrt(vi)) %>% select(yi, sd_yi, measure_change) %>% pivot_longer(cols = c(yi,sd_yi), names_to = "type", values_to = "value") %>%
ggplot(aes(x = value)) + geom_density(aes(color = measure_change)) + facet_wrap(~type, scale = "free") + ggtitle("Density of lnRR and VRR between two measurement methods")
meta_RR <- meta_RR %>% group_by(study) %>% mutate(exp_id = 1:n()) %>% ungroup()
MLMA1 <- metafor::rma.mv(yi ~ 1, V = vi, method = "REML",
random = list( ~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
summary(MLMA1)
meta_RR <- meta_RR %>% mutate(abs_yi = abs(yi))
MLMA2 <- metafor::rma.mv(abs_yi ~ 1, V = vi, method = "REML",
random = list(~1|study/cue_stimulus_type/species/exp_id),
dfs = "contain", test = "t", data = meta_RR)
MLMA2
meta_RR %>% filter(average_n < quantile(meta_RR$average_n,0.99)) %>% ggplot(aes(x = average_n, y = abs_yi)) + geom_point() + geom_smooth(method = lm) + scale_color_gradientn(colours = topo.colors(10)) + ggtitle("The relationship between sample size and abs(lnRR)") + ylab("abs(log(Response ratio))") + xlab("average sample size of study")
anti_funnel <- function(data, diff_color){
ggplot(data, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "Absolute ln response ratio(abs(lnRR)）", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi< quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(NULL)
metafor::funnel(x = meta_RR$yi, vi = meta_RR$vi, yaxis = "seinv",
digits = 2, level = c(0.1, 0.05, 0.01), shade = c("#e9fbff", "#dcf0ef", "#bac8cc"),ylim = c(0.01,30),xlim = c(-3,3),
las = 1, xlab = "Response ratio (RR)", atransf = exp, legend = TRUE, pch =20)
funnel(MLMA1, yilm=c(1:4,by=2),yaxis="seinv",level=c(90.95,99),ylab="Precision(1/SE)",refline=0,cex=0.4)
funnel(MLMA2, yilm=c(1:4,by=2),yaxis="seinv",level=c(90.95,99),ylab="Precision(1/SE)",refline=0,cex=0.4)
anti_funnel <- function(data, diff_color){
ggplot(meta_RR, aes(y = abs_yi, x = vi, color = {{diff_color}})) + geom_point() + geom_smooth(method = lm, formula = y~x) +
labs(y = "abs(lnRR)", x = "Sampling Variance of lnRR") +
stat_poly_eq(use_label(c("eq","R2", "P"), sep = "*\"; \"*"),
formula = y~x , label.x = 8, parse = TRUE) +
theme_classic() + ggtitle("Linear fitting of VRR to the absolute value of lnRR")
}
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(NULL)
meta_RR %>% filter(vi < quantile(meta_RR$vi,0.95)) %>% anti_funnel(measure_change)
ggplot(meta_RR,aes(y=yi,x =year_online,size=1/sqrt(vi))) + geom_point() + geom_smooth(method=lm,col="red",show.legend=FALSE)+labs(x="Publication Year", y="Fisher's Z-transformed Correlation coefficient(zr)",size="Pricision(1/SE)"+theme_classic())
MLMR <- rma.mv(yi ~ inverse_vi, V = vi, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% mutate(inverse_vi = 1/vi) %>% filter(inverse_vi <= quantile(inverse_vi, 0.95)))
MLMR
MLMI <- rma.mv(yi ~ inverse_vi+vi, V = vi,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
MLMI <- rma.mv(yi ~ inverse_vi+vi, V = vi,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
r2a <- orchaRd::r2_ml(MLMI)
IS_meta_RR <- meta_RR%>% filter(year_online>2011)
ggplot(IS_meta_RR,aes(y=yi,x=year_online,size=sqrt(1/vi)))+geom_point()+geom_smooth(method = lm,col="red",show.legend = FALSE)+labs(x="publication Year",y="Log Response Ratio(lnRR)",size="Precision(1/SE")+theme_classic()
MLMI <- rma.mv(yi ~ inverse_vi, V = vi,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
MLMI <- rma.mv(yi ~ 1/vi, V = vi,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
MLMI <- rma.mv(yi ~ 1/vi, V = vi,random = list(~1 | study, ~1 | residual),
test = "t", dfs = "contain",  data=meta_RR)
MLMI <- rma.mv(yi ~ 1/vi, V = vi,random = list(~1 | study/exp_id),
test = "t", dfs = "contain",  data=meta_RR)
MLMI
MLMI_p <- metafor::rma.mv(vi ~ year_c + precision, V = vi, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% filter(precision < quantile(meta_RR$precision,0.99)))
MLMI_p <- metafor::rma.mv(vi ~ year_c + yi, V = vi, random = list(~1 | study/exp_id),
test = "t", dfs = "contain", data = meta_RR %>% filter(precision < quantile(meta_RR$precision,0.99)))
library(orchaRd)
install.packages("orchaRd")
install.packages(orchaRd)
""
install.packages("orchaRd")
pacman::p_load(metafor, orchaRd)
devtools::install_github("daniel1noble/orchaRd", force = TRUE)
install.packages("devtools")
pacman::p_load(metafor, orchaRd)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(metafor, orchaRd)
devtools::install_github("daniel1noble/orchaRd", force = TRUE)
library(devtools)
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
install.packages("devtools")
r2a <- orchaRd::r2_ml(MLMI)
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
pacman::p_load(metafor, orchaRd)
devtools::install_github("daniel1noble/orchaRd", force = TRUE)
p_load(bookdown, devtools, tidyverse, ggforce, GGally, flextable, latex2exp, png,
magick, metafor, MASS, emmeans, R.rsp)
library(devtools)
pacman::p_load(metafor, orchaRd)
devtools::install_github("daniel1noble/orchaRd", force = TRUE)
r2a <- orchaRd::r2_ml(MLMI)
IS_meta_RR <- meta_RR%>% filter(year_online>2011)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(pacman)
library(metafor)
library(ggpmisc)
IS_meta_RR <- meta_RR%>% filter(year_online>2011)
ggplot(IS_meta_RR,aes(y=yi,x=year_online,size=sqrt(1/vi)))+geom_point()+geom_smooth(method = lm,col="red",show.legend = FALSE)+labs(x="publication Year",y="Log Response Ratio(lnRR)",size="Precision(1/SE")+theme_classic()
